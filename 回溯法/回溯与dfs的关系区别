回溯的关键不在于递归，而在于“状态”。在回溯算法向前的每一步，你都会去设置某个状态，而当向前走走不通的时候回退，此时需要把之前设置的状态撤销掉。
dfs 只是找某个或某些满足条件的东西而已，找到就返回，找不到拉倒，没状态啥事儿。



dfs会将已经访问过的点标记为不可再次连接,不会再撤销，从而使得可搜索路径越来越少，而回溯会在访问初标记，回溯时撤销（所以dfs会有visited数组）

最好的链接：
https://leetcode.cn/problems/subsets/solution/c-zong-jie-liao-hui-su-wen-ti-lei-xing-dai-ni-gao-/
其中，何时使用回溯算法：
当问题需要 "回头"，以此来查找出所有的解的时候，使用回溯算法。即满足结束条件或者发现不是正确路径的时候(走不通)，要撤销选择，回退到上一个状态，继续尝试，直到找出所有解为止
