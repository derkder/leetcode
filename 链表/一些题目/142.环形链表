判断是否有环
快慢指针，fast 比slow多走了n 个环的长度(慢指针走的路程小于等于n，即走不完一圈就和快指针相遇)
得到，从相遇点到入环点的距离加上 n-1 圈的环长，恰好等于从链表头部到入环点的距离（a）【a=c+(n-1)(b+c)】
因此，当发现 slow 与 fast 相遇时，我们再额外使用一个指针 ptr。起始，它指向链表头部；随后，它和slow 每次向后移动一个位置。最终，它们会在入环点相遇。【分成n=1和n>=1的情况带进去试试就理解了】




为什么慢指针走不完一圈就和快指针相遇：
解：
设 环的长度为A,慢指针在入环的时候快指针在环中的位置B(取值范围0到A-1),
当快慢指针相遇时 [慢指针在环中走了C] ,有
    C % A = ( B + 2C) % A,等价于 
    An + C = B + 2C,合并得
    C = An - B
    当 n=1 时 , 0 <= C < A
故 慢指针在第一圈必定能和快指针相遇
